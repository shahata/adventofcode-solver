import { part1, part2 } from './day23.js';
import readInput from '../utils/read-input.js';

const input = readInput(import.meta.url);

describe('day23 2023', () => {
  describe('part1', () => {
    test('it should work for part 1 examples', () => {
      expect(
        part1(
          [
            '#.#####################',
            '#.......#########...###',
            '#######.#########.#.###',
            '###.....#.>.>.###.#.###',
            '###v#####.#v#.###.#.###',
            '###.>...#.#.#.....#...#',
            '###v###.#.#.#########.#',
            '###...#.#.#.......#...#',
            '#####.#.#.#######.#.###',
            '#.....#.#.#.......#...#',
            '#.#####.#.#.#########v#',
            '#.#...#...#...###...>.#',
            '#.#.#v#######v###.###v#',
            '#...#.>.#...>.>.#.###.#',
            '#####v#.#.###v#.#.###.#',
            '#.....#...#...#.#.#...#',
            '#.#########.###.#.#.###',
            '#...###...#...#...#.###',
            '###.###.#.###v#####v###',
            '#...#...#.#.>.>.#.>.###',
            '#.###.###.#.###.#.#v###',
            '#.....###...###...#...#',
            '#####################.#',
          ].join('\n'),
        ),
      ).toEqual(94);
    });

    test('it should work for part 1 input', () => {
      expect(part1(input)).toEqual(2086);
    });
  });

  describe('part2', () => {
    test('it should work for part 2 examples', () => {
      expect(
        part2(
          [
            '#.#####################',
            '#.......#########...###',
            '#######.#########.#.###',
            '###.....#.>.>.###.#.###',
            '###v#####.#v#.###.#.###',
            '###.>...#.#.#.....#...#',
            '###v###.#.#.#########.#',
            '###...#.#.#.......#...#',
            '#####.#.#.#######.#.###',
            '#.....#.#.#.......#...#',
            '#.#####.#.#.#########v#',
            '#.#...#...#...###...>.#',
            '#.#.#v#######v###.###v#',
            '#...#.>.#...>.>.#.###.#',
            '#####v#.#.###v#.#.###.#',
            '#.....#...#...#.#.#...#',
            '#.#########.###.#.#.###',
            '#...###...#...#...#.###',
            '###.###.#.###v#####v###',
            '#...#...#.#.>.>.#.>.###',
            '#.###.###.#.###.#.#v###',
            '#.....###...###...#...#',
            '#####################.#',
          ].join('\n'),
        ),
      ).toEqual(154);
    });

    test('it should work for part 2 input', () => {
      expect(part2(input)).toEqual(6526);
    });
  });
});
